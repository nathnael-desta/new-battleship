// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
"use strict";
var commandlinker_1 = require("../commandlinker");
var commandpalette_1 = require("../commandpalette");
var instancetracker_1 = require("../common/instancetracker");
var instancerestorer_1 = require("../instancerestorer");
var _1 = require("./");
/**
 * The FAQ page extension.
 */
var plugin = {
    activate: activate,
    id: 'jupyter.extensions.faq',
    requires: [commandpalette_1.ICommandPalette, commandlinker_1.ICommandLinker, instancerestorer_1.IInstanceRestorer],
    autoStart: true
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Export the plugin as default.
 */
exports.default = plugin;
/**
 * Activate the FAQ plugin.
 */
function activate(app, palette, linker, restorer) {
    var category = 'Help';
    var command = _1.CommandIDs.open;
    var model = new _1.FaqModel();
    var tracker = new instancetracker_1.InstanceTracker({ namespace: 'faq' });
    // Handle state restoration.
    restorer.restore(tracker, {
        command: command,
        args: function () { return null; },
        name: function () { return 'faq'; }
    });
    var widget;
    function newWidget() {
        var widget = new _1.FaqWidget({ linker: linker });
        widget.model = model;
        widget.id = 'faq';
        widget.title.label = 'FAQ';
        widget.title.closable = true;
        tracker.add(widget);
        return widget;
    }
    app.commands.addCommand(command, {
        label: 'Open FAQ',
        execute: function () {
            if (!widget || widget.isDisposed) {
                widget = newWidget();
                app.shell.addToMainArea(widget);
            }
            app.shell.activateMain(widget.id);
        }
    });
    palette.addItem({ command: command, category: category });
}
//# sourceMappingURL=plugin.js.map