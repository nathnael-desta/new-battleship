// Copyright (c) Jupyter Development Team.
// Distributed under the terms of the Modified BSD License.
"use strict";
var commandpalette_1 = require("../commandpalette");
var instancetracker_1 = require("../common/instancetracker");
var filebrowser_1 = require("../filebrowser");
var instancerestorer_1 = require("../instancerestorer");
var services_1 = require("../services");
var _1 = require("./");
/**
 * The class name added to the landing plugin.
 */
var LANDING_CLASS = 'jp-Landing';
/**
 * The landing page extension.
 */
var plugin = {
    activate: activate,
    id: 'jupyter.extensions.landing',
    requires: [filebrowser_1.IPathTracker, commandpalette_1.ICommandPalette, services_1.IServiceManager, instancerestorer_1.IInstanceRestorer],
    autoStart: true
};
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Export the plugin as default.
 */
exports.default = plugin;
/**
 * Activate the landing plugin.
 */
function activate(app, pathTracker, palette, services, restorer) {
    var category = 'Help';
    var command = _1.CommandIDs.open;
    var model = new _1.LandingModel(services.terminals.isAvailable());
    var tracker = new instancetracker_1.InstanceTracker({ namespace: 'landing' });
    // Handle state restoration.
    restorer.restore(tracker, {
        command: command,
        args: function () { return null; },
        name: function () { return 'landing'; }
    });
    var widget;
    function newWidget() {
        var widget = new _1.LandingWidget(app);
        widget.model = model;
        widget.id = 'landing-jupyterlab';
        widget.title.label = 'Landing';
        widget.title.closable = true;
        widget.addClass(LANDING_CLASS);
        tracker.add(widget);
        return widget;
    }
    app.commands.addCommand(command, {
        label: 'Open Landing',
        execute: function () {
            if (!widget || widget.isDisposed) {
                widget = newWidget();
                app.shell.addToMainArea(widget);
            }
            app.shell.activateMain(widget.id);
        }
    });
    pathTracker.pathChanged.connect(function () {
        if (pathTracker.path.length) {
            model.path = 'home > ' + pathTracker.path.replace('/', ' > ');
        }
        else {
            model.path = 'home';
        }
    });
    palette.addItem({ category: category, command: command });
    // Only create a landing page if there are no other tabs open.
    app.restored.then(function () {
        if (app.shell.mainAreaIsEmpty) {
            app.commands.execute(command, void 0);
        }
    });
}
//# sourceMappingURL=plugin.js.map