import { Kernel } from '@jupyterlab/services';
import { ISignal } from '@phosphor/signaling';
import { Widget } from '@phosphor/widgets';
import { ToolbarButton } from './index';
/**
 * A kernel owner interface.
 */
export interface IKernelOwner {
    /**
     * An associated kernel.
     */
    kernel: Kernel.IKernel;
    /**
     * A signal emitted when the kernel is changed.
     */
    kernelChanged: ISignal<IKernelOwner, Kernel.IKernel>;
}
/**
 * Create an interrupt toolbar item.
 */
export declare function createInterruptButton(kernelOwner: IKernelOwner): ToolbarButton;
/**
 * Create a restart toolbar item.
 */
export declare function createRestartButton(kernelOwner: IKernelOwner, host?: HTMLElement): ToolbarButton;
/**
 * Create a kernel name indicator item.
 *
 * #### Notes
 * It will display the `'display_name`' of the current kernel,
 * or `'No Kernel!'` if there is no kernel.
 * It can handle a change in context or kernel.
 */
export declare function createKernelNameItem(kernelOwner: IKernelOwner): Widget;
/**
 * Create a kernel status indicator item.
 *
 * #### Notes
 * It show display a busy status if the kernel status is
 * not idle.
 * It will show the current status in the node title.
 * It can handle a change to the context or the kernel.
 */
export declare function createKernelStatusItem(kernelOwner: IKernelOwner): Widget;
